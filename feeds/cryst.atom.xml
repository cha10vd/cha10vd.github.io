<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>AD(P)HD</title><link href="https://cha10vd.github.io/" rel="alternate"></link><link href="https://cha10vd.github.io/feeds/cryst.atom.xml" rel="self"></link><id>https://cha10vd.github.io/</id><updated>2019-01-21T00:00:00+00:00</updated><entry><title>The Fractional Coordinate System</title><link href="https://cha10vd.github.io/2019/01/frac-coord.html" rel="alternate"></link><published>2019-01-21T00:00:00+00:00</published><updated>2019-01-21T00:00:00+00:00</updated><author><name>victor</name></author><id>tag:cha10vd.github.io,2019-01-21:2019/01/frac-coord.html</id><summary type="html">&lt;h1&gt;Working in Fractional Coordinates&lt;/h1&gt;
&lt;p&gt;In describing a physical system, one usually has many choices as to the coordinate system in which 
to formulate a problem, and intuitively it makes sense to choose one in which we may exploit the 
natural symmetry of the system.&lt;/p&gt;
&lt;p&gt;Just as for problems with spherical symmetry we move from cartesian to polar coordinates, there is 
likewise a particular coordinate system especially suited for dealing with non-orthogonal repeating
systems.  This is the &lt;em&gt;fractional coordinate system&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The idea here is to take three vectors which connect repeats in our infinitely repeating system and
use these as our basis vectors for representing space. In our fractional coordinates our basis is 
given by &lt;span class="math"&gt;\(a,b,c\)&lt;/span&gt;, as opposed to &lt;span class="math"&gt;\(x,y,z\)&lt;/span&gt;. These will have mutual angles of &lt;span class="math"&gt;\(\alpha, \beta, \gamma\)&lt;/span&gt;.&lt;/p&gt;
&lt;figure&gt;
  &lt;img src="/../assets/images/cryst/unit_cell.png" alt="my alt text"/&gt;
  &lt;figcaption&gt;Fractional coordinate system embedded in Cartesian axis.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The question then becomes: &lt;strong&gt;How is this coordinate system connectected to the one we're acustomed 
to?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If we imagine the "box" formed from the three vectors in each coordinate system, we can start
by simply aligning one of the fractional vectors to one of its Cartesian counterparts, giving them 
a one-to-one correspondence. &lt;/p&gt;
&lt;p&gt;we set &lt;em&gt;a&lt;/em&gt; to lie along the positive x-axis direction, choosing &lt;em&gt;b&lt;/em&gt; to lie in the &lt;em&gt;x,y&lt;/em&gt;-plane. This 
gives us the correspondence &lt;span class="math"&gt;\(b = cos(x) + sin(y)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Having used up all our degrees of freedom, &lt;em&gt;c&lt;/em&gt; is constrained by the directions of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; and
the angles it makes with them.&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation}
    \label{cdota}
    \vec{c} \cdot  \vec{a} = \vec{a}\ \vec{c}\ cos(\beta) = a\  c_{x}
\end{equation}&lt;/div&gt;
&lt;div class="math"&gt;\begin{equation}
    \label{cdotb}
    \vec{c} \cdot  \vec{b} = \vec{b}\ \vec{c}\ cos{\alpha}
\end{equation}&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "left",
        indent = "1em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary></entry></feed>